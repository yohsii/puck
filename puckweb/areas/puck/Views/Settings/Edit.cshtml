@model puck.core.Models.Settings

@{
    Layout = null;
}

<div class="settings">
    <div class="row">
        <div class="col-md-12 grid_9 alpha omega">
            @using (Html.BeginForm())
            {
                @Html.ValidationSummary(true)
                <fieldset>
                    <legend>Settings</legend>
                    <div class="submit top">
                        <button class="btn btn-link">update</button>
                    </div>
                    <!--
                <div class="fieldwrapper">
                    <div class="editor-label">
                    @Html.LabelFor(model => model.DefaultLanguage)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.DefaultLanguage)
                        @Html.ValidationMessageFor(model => model.DefaultLanguage)
                    </div>
                </div>
                <br />

                <div class="fieldwrapper">
                    <div class="editor-label">
                    @Html.LabelFor(model => model.EnableLocalePrefix)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.EnableLocalePrefix)
                        @Html.ValidationMessageFor(model => model.EnableLocalePrefix)
                    </div>
                </div>
                <br />
                -->
                    <div class="fieldwrapper">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Languages)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Languages)
                            @Html.ValidationMessageFor(model => model.Languages)
                        </div>
                    </div>
                    <br />

                    <div class="fieldwrapper">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Redirect)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Redirect)
                            @Html.ValidationMessageFor(model => model.Redirect)
                        </div>
                    </div>
                    <br />

                    <div class="fieldwrapper">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.TypeGroupField)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.TypeGroupField)
                            @Html.ValidationMessageFor(model => model.TypeGroupField)
                        </div>
                    </div>
                    <br />

                    <div class="fieldwrapper">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.TypeAllowedTemplates)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.TypeAllowedTemplates)
                            @Html.ValidationMessageFor(model => model.TypeAllowedTemplates)
                        </div>
                    </div>
                    <br />

                    <div class="fieldwrapper">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.TypeAllowedTypes)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.TypeAllowedTypes)
                            @Html.ValidationMessageFor(model => model.TypeAllowedTypes)
                        </div>
                    </div>
                    <br />

                    <div class="fieldwrapper">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.EditorParameters)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.EditorParameters)
                            @Html.ValidationMessageFor(model => model.EditorParameters)
                        </div>
                    </div>
                    <br />

                    <div class="fieldwrapper">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CachePolicy)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.CachePolicy)
                            @Html.ValidationMessageFor(model => model.CachePolicy)
                        </div>
                    </div>
                    <br />

                    <div class="fieldwrapper">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Orphans)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Orphans)
                            @Html.ValidationMessageFor(model => model.Orphans)
                        </div>
                    </div>

                    <div class="submit bottom">
                        <button class="btn-link">update</button>
                    </div>
                </fieldset>
            }
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        
    });
</script>    