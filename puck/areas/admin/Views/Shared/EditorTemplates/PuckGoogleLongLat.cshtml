@model puck.core.Models.GeoPosition
@{
    Layout = null;    
}
<div class="puck_google_long_lat puck_google_long_lat_@ViewData.ModelMetadata.PropertyName">

    <style>
        .puck_google_long_lat{
            position:relative;
        }
        .puck_google_long_lat .panel {
            position: absolute;
            top: 5px;
            left: 50%;
            margin-left: -180px;
            z-index: 5;
            background-color: #fff;
            padding: 5px;
            border: 1px solid #999;
        }
    </style>
    <script>
        onAfterDom(function(){
            var container = $(".puck_google_long_lat_@ViewData.ModelMetadata.PropertyName");
        var geocoder;
        var map;
        var lat = @(Model==null?51.5072:Model.Latitude??51.5072);
        var long = @(Model==null?0.1275:Model.Longitude??0.1275);
        function initialize() {
            geocoder = new google.maps.Geocoder();
            var latlng = new google.maps.LatLng(lat, long);
            var mapOptions = {
                zoom: 8,
                center: latlng
            }
            var width = container.parents(".fieldwrapper").width()-200;
            container.find('.map-canvas').css({ width: width, height: 500 });
            map = new google.maps.Map(container.find('.map-canvas').get(0), mapOptions);
        }

        function codeAddress() {
            var address = container.find('.address').val();
            geocoder.geocode( { 'address': address}, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });
                    container.find(".lat input").val(results[0].geometry.location.k);
                    container.find(".long input").val(results[0].geometry.location.A);
                } else {
                    msg(false,'Geocode was not successful for the following reason: ' + status);
                }
            });
        }
        container.find("[type=button]").click(function () {
            codeAddress();
        });
        var whenViz = function () {
            if (container.parents(".tab-content").is(":visible"))
                initialize();
            else
                setTimeout(whenViz,100);
        }
        whenViz();
    });
    </script>
    <div class="panel">
        <input class="address" type="textbox" value="london">
        <input type="button" value="Geocode">
    </div>
    <div class="map-canvas"></div>
    <div class="fieldwrapper lat">
        @Html.LabelFor(x=>x.Latitude)
        @Html.EditorFor(x=>x.Latitude)
    </div>
    <div class="fieldwrapper long">
        @Html.LabelFor(x=>x.Longitude)
        @Html.EditorFor(x=>x.Longitude)
    </div>
    @Html.HiddenFor(x=>x.LatLong)
</div>

