@model Object

<div class="fields">
@foreach (var prop in ViewData.ModelMetadata.Properties.Where(pm => pm.ShowForEdit && !ViewData.TemplateInfo.Visited(pm))) {
    if (prop.HideSurroundingHtml) {
        @Html.Editor(prop.PropertyName)
    } else {
        var complexChild = ViewBag.Level0Type != null && prop.ContainerType != ViewBag.Level0Type;
        var propName = string.IsNullOrEmpty(ViewData.TemplateInfo.GetFullHtmlFieldName("")) ? prop.PropertyName : ViewData.TemplateInfo.GetFullHtmlFieldName("") + "." + prop.PropertyName;
        <div data-fieldname="@propName" class="fieldwrapper @(prop.IsComplexType?"complex":"") @(complexChild?"complex_child":"")">
            <div class="editor-label" style="">
                @Html.Label(string.IsNullOrEmpty(prop.DisplayName)?prop.PropertyName:prop.DisplayName)
            </div>
            <div class="editor-field">
                @Html.Editor(prop.PropertyName)            
            </div>            
        </div>        
    }
}

</div>
    
