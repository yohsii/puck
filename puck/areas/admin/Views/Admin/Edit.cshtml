@model puck.core.Models.PuckUser
@{
    Layout = null;    
}
<div class="grid_5 push_1 user_edit settings">
    @using (Html.BeginForm("edit", "admin", new { edit = (!string.IsNullOrEmpty(Model.UserName)).ToString() }, FormMethod.Post,null))
    {
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Puck User</legend>
            
            <div class="fieldwrapper">
            @Html.LabelFor(x => x.UserName)
            @if (!string.IsNullOrEmpty(Model.UserName))
            {
                @Html.DisplayFor(x => x.UserName)
                @Html.HiddenFor(x => x.UserName)
            }
            else
            {
                @Html.TextBoxFor(x => x.UserName)
            }
            </div>
            
            <div class="fieldwrapper">
            @Html.LabelFor(x => x.Email)
            @Html.TextBoxFor(x => x.Email)
            </div>
            
            <div class="fieldwrapper">
            @Html.LabelFor(x => x.StartNode)
            @Html.EditorFor(x => x.StartNode)
            </div>

            <div class="fieldwrapper">
            @Html.LabelFor(x => x.Roles)
            @Html.EditorFor(x => x.Roles)
            </div>
            
            @if (string.IsNullOrEmpty(Model.Password))
            {
                <div class="fieldwrapper">
                @Html.LabelFor(x => x.Password)
                @Html.TextBoxFor(x => x.Password)
                </div>

                <div class="fieldwrapper">
                @Html.LabelFor(x => x.PasswordConfirm)
                @Html.TextBoxFor(x => x.PasswordConfirm)
                </div>
            }
            else
            {
                @Html.HiddenFor(x => x.Password)
                @Html.HiddenFor(x => x.PasswordConfirm)
                
                <div class="fieldwrapper">
                @Html.LabelFor(x => x.NewPassword)
                @Html.TextBoxFor(x => x.NewPassword)
                </div>

                <div class="fieldwrapper">
                @Html.LabelFor(x => x.NewPasswordConfirm)
                @Html.TextBoxFor(x => x.NewPasswordConfirm)
                </div>
            }
        </fieldset>
        <div>
            <button class="btn-link update">update</button>
        </div>
    }    
    <div class="msg">

    </div>
</div>